---
# tasks file for aws_ec2
- name: Assume role
  include_role: 
    name: aws_sts_login
  vars:
    admin_access_key: "{{ aws_credentials_vault[cust_config[cust_name][env_name]['aws_profile'].admin_role_name].access_key }}"
    admin_secret_access_key: "{{ aws_credentials_vault[cust_config[cust_name][env_name]['aws_profile'].admin_role_name].secret_access_key }}"
    assume_role_session_name: "ansible-{{ mode }}-{{ role_name }}"
    assume_role_arn: "{{ aws_credentials_vault[cust_config[cust_name][env_name]['aws_profile'].role_name].role_arn }}"

- name: Gather facts ami ecs optomised amazon owned images  
  ec2_ami_facts:
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ role_region }}"
    owners: amazon
    filters:
      name: "amzn-ami-*-amazon-ecs-optimized"
  register: result

- name: sort AMI and set to latest
  set_fact:
    image_id: "{{ (result.images |sort(attribute='creation_date')|last ).image_id }}"

- name: "{{ mode }} key pair"
  ec2_key:
      name: "{{ ec2_key_pair }}" # required. Name of the key pair.
      aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
      aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      security_token: "{{ assumed_role.sts_creds.session_token }}"
      region: "{{ role_region }}"
      state: "{{ stack_state }}"
  no_log: true 

- name: "{{ mode }} ecs auto-scaling-group cloudformation stack"
  cloudformation:
    stack_name: "{{ stack_name }}"
    state: "{{ stack_state }}"
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ role_region }}"
    template: "{{ script_dir }}/ec2-autoscaling-ecs.yml"
    template_parameters:
      NetworkStack: "{{ network_stack_name }}"
      IntranetStack: "{{ intranet_stack_name }}"
      AMI: "{{ image_id }}"
      KeyName: "{{ ec2_key_pair }}"
      NumNodes: "{{ number_nodes | default(0) }}"
      ClusterName: "{{ ecs_cluster_name }}"
