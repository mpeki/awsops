---
- name: "{{ mode }} service-linked role for elastic-search"
  cloudformation:
    stack_name: "{{ es_role_stack_name }}"
    state: "{{ stack_state }}"
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ role_region }}"
    template: "{{ es_script_dir }}/elasticsearch-role.yml"

- name: "{{ mode }} elasticsearch setup"
  cloudformation:
    stack_name: "{{ es_stack_name }}"
    state: "{{ stack_state }}"
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ role_region }}"
    template: "{{ es_script_dir }}/elasticsearch-setup.yml"
    template_parameters:
      DomainName: "{{ cust_config[cust_name][env_name].account }}-es"
      NetworkStack: "{{ network_stack_name }}"
      IntranetStack: "{{ intranet_stack_name }}"
      InstanceType: "{{ es_instance_type }}"
      EnforceSSL: "{{ cust_config[cust_name][env_name]['elasticsearch'].enforce_ssl | default('false') }}"
      NodeToNodeEncrypted: "{{ cust_config[cust_name][env_name]['elasticsearch'].node_to_node_encryption | default('false') }}"
      EncryptedAtRest: "{{ cust_config[cust_name][env_name]['elasticsearch'].use_encryption | default('false') }}"
      KeyId: "{{ cust_config[cust_name][env_name]['elasticsearch'].key_id | default('') }}"
