---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Network ACLs for private intranet traffic for Customer Self Service Portal"

Parameters:
  NetworkStack:
    Type: "String"
    Description: "Network stack to apply to."

  IntranetCidrBlock:
    Type: "String"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\/(\\d{1,2})"
    Description: "CIDR block for Intranet."

Resources:
  # create a network ACL to control traffic at the SUBNET level
  # this is regardless of what instances or security groups are in use within the subnet
  VpnAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-VpnAcl
      - Key: Scope
        Value: public
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkStack}-VpcId

  # NACLs must be explicitly associated with subnets
  VpnAclAssociationA:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref VpnAcl
      SubnetId:
        Fn::ImportValue:
          !Sub ${NetworkStack}-SubnetNodesAId

  VpnAclAssociationB:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref VpnAcl
      SubnetId:
        Fn::ImportValue:
          !Sub ${NetworkStack}-SubnetNodesBId

  VpnAclAssociationC:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref VpnAcl
      SubnetId:
        Fn::ImportValue:
          !Sub ${NetworkStack}-SubnetNodesCId

  VpnAclAssociationDbA:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref VpnAcl
      SubnetId:
        Fn::ImportValue:
          !Sub ${NetworkStack}-SubnetDbAId

  VpnAclAssociationDbB:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref VpnAcl
      SubnetId:
        Fn::ImportValue:
          !Sub ${NetworkStack}-SubnetDbBId

  VpnAclAssociationDbC:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref VpnAcl
      SubnetId:
        Fn::ImportValue:
          !Sub ${NetworkStack}-SubnetDbCId

  # Allow all traffic from intranet
  VpnAclEntryIngressAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref VpnAcl
      RuleNumber: 100
      Protocol: -1 # -1 all ports
      RuleAction: allow
      CidrBlock: !Sub ${IntranetCidrBlock}

  # Allow all traffic to intranet
  VpnAclEntryEgressAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref VpnAcl
      RuleNumber: 100
      Protocol: -1 # -1 all ports
      RuleAction: allow
      Egress: true
      CidrBlock: !Sub ${IntranetCidrBlock}

  # Allow all traffic from Internet
  VpnAclEntryIngressAllInternet:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref VpnAcl
      RuleNumber: 200
      Protocol: -1 # -1 all ports
      RuleAction: allow
      CidrBlock: 0.0.0.0/0 # DESTINATION range anywhere

  # Allow all traffic to Internet
  VpnAclEntryEgressAllInternet:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref VpnAcl
      RuleNumber: 200
      Protocol: -1 # -1 all ports
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0 # DESTINATION range anywhere
